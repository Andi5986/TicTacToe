@page "/"

<h3>Tic Tac Toe</h3>

@if (!gameStarted)
{
    <div>
        <button @onclick="StartSinglePlayer">Single Player</button>
        <button @onclick="StartTwoPlayer">Two Players</button>
    </div>
}
else
{
    <div class="board">
        @for (int i = 0; i < 3; i++)
        {
            <div class="row">
                @for (int j = 0; j < 3; j++)
                {
                    int index = i * 3 + j;
                    <button @onclick="(() => MakeMove(index))" class="cell">@board[index]</button>
                }
            </div>
        }
    </div>

    @if (winner != null)
    {
        <div class="winner">Winner: @winner</div>
    }
}

<style>
    .board {
        display: inline-block;
    }

    .row {
        display: flex;
    }

    .cell {
        width: 60px;
        height: 60px;
        font-size: 24px;
    }

    .winner {
        margin-top: 20px;
        font-size: 24px;
        font-weight: bold;
    }
</style>

@code {
    private string[] board = new string[9];
    private string currentPlayer = "X";
    private string winner = null;
    private bool gameStarted = false;
    private bool singlePlayerMode = false;

    private void StartSinglePlayer()
    {
        gameStarted = true;
        singlePlayerMode = true;
    }

    private void StartTwoPlayer()
    {
        gameStarted = true;
        singlePlayerMode = false;
    }

    private void MakeMove(int index)
    {
        if (board[index] == null && winner == null)
        {
            board[index] = currentPlayer;
            CheckForWinner();

            if (singlePlayerMode && currentPlayer == "X" && winner == null)
            {
                ComputerMove();
                CheckForWinner();
            }
            else
            {
                currentPlayer = currentPlayer == "X" ? "O" : "X";
            }
        }
    }

    private void ComputerMove()
    {
        var random = new Random();
        int move;
        do
        {
            move = random.Next(0, 9);
        } while (board[move] != null);
        board[move] = "O";
    }

    private void CheckForWinner()
    {
        // Check rows, columns, diagonals
        for (int i = 0; i < 3; i++)
        {
            if (board[i] != null && board[i] == board[i + 3] && board[i] == board[i + 6])
            {
                winner = board[i];
                return;
            }
            if (board[i * 3] != null && board[i * 3] == board[i * 3 + 1] && board[i * 3] == board[i * 3 + 2])
            {
                winner = board[i * 3];
                return;
            }
        }

        // Check diagonals
        if (board[0] != null && board[0] == board[4] && board[0] == board[8])
        {
            winner = board[0];
            return;
        }
        if (board[2] != null && board[2] == board[4] && board[2] == board[6])
        {
            winner = board[2];
            return;
        }
    }
}
